{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\r\n})\r\nexport class AuthModule {}\r\n","module.exports = \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"E-Mail\\\"\\r\\n        #emailInput=\\\"ngModel\\\"\\r\\n        required\\r\\n        email\\r\\n      />\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">\\r\\n        Please enter a valid email.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\"\\r\\n        #passwordInput=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\r\\n        Please enter a valid Password.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">\\r\\n      Login\\r\\n    </button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"../auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSubs: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) return;\r\n    this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSubs.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"E-Mail\\\"\\r\\n        #emailInput=\\\"ngModel\\\"\\r\\n        required\\r\\n        email\\r\\n      />\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">\\r\\n        Please enter a valid email.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\"\\r\\n        #passwordInput=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\r\\n        Please enter a valid Password.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">\\r\\n      SignUp\\r\\n    </button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"]\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSubs: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) return;\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSubs.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":""}